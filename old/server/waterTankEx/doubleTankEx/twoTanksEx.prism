mdp


 
const int wl1Init;
const int wl2Init;

const int cont1State;
const int cont2State;

const int constFillRate = 13;

const int wlContLowThresh = 20;
const int wlContUpThresh = 80;

const int maxTime = 25;

module LECMarkovChain

    wl1 : [-200..200] init wl1Init;
    wl1Per : [-200..200] init wl1Init;
    inflow1 : [0..100] init 0;
    outflow1 : [0..100] init 4;
    contAction1 : [0..100] init cont1State;

    wl2 : [-200..200] init wl2Init;
    wl2Per : [-200..200] init wl2Init;
    inflow2 : [0..100] init 0;
    outflow2 : [0..100] init 4;
    contAction2 : [0..100] init cont2State;



    seqflag : [-1..3] init -1;

    tankflagPer : [1..2] init 1;
    tankflagCont : [1..3] init 1;
    tankflagOut : [1..2] init 1;

    sink : [0..1] init 0;

    timesteps : [0..maxTime] init 0;

    // 8 bins no coin flip
    //[] seqflag=-1&tankflagPer=1&sink=0 -> 0.0625: (wl1Per'=wl1+7-0)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-1)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-2)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-3)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-4)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-5)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-6)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-7)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-8)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-9)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-10)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-11)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-12)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-13)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-14)&(seqflag'=-1)&(tankflagPer'=2) + 0.0625: (wl1Per'=wl1+7-15)&(seqflag'=-1)&(tankflagPer'=2);
    //[] seqflag=-1&tankflagPer=2&sink=0 -> 0.0625: (wl2Per'=wl2+7-0)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-1)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-2)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-3)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-4)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-5)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-6)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-7)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-8)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-9)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-10)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-11)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-12)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-13)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-14)&(seqflag'=0)&(tankflagPer'=1) + 0.0625: (wl2Per'=wl2+7-15)&(seqflag'=0)&(tankflagPer'=1);

    // 19 bins coin flip
    //[] seqflag=-1&tankflagPer=1&sink=0 -> 0.1:(wl1Per'=0)&(seqflag'=-1)&(tankflagPer'=2) + 0.1:(wl1Per'=100)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-0)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-1)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-2)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-3)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-4)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-5)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-6)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-7)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-8)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-9)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-10)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-11)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-12)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-13)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-14)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-15)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-16)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-17)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.05263157894736842: (wl1Per'=wl1+9-18)&(seqflag'=-1)&(tankflagPer'=2);
    //[] seqflag=-1&tankflagPer=2&sink=0 -> 0.1:(wl2Per'=0)&(seqflag'=0)&(tankflagPer'=1) + 0.1:(wl2Per'=100)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-0)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-1)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-2)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-3)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-4)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-5)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-6)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-7)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-8)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-9)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-10)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-11)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-12)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-13)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-14)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-15)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-16)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-17)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.05263157894736842: (wl2Per'=wl2+9-18)&(seqflag'=0)&(tankflagPer'=1);

    // 8 bins uniform, coin flip
    //[] seqflag=-1&tankflagPer=1&sink=0 -> 0.1:(wl1Per'=0)&(seqflag'=-1)&(tankflagPer'=2) + 0.1:(wl1Per'=100)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-0)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-2)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-4)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-6)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-8)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-10)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-12)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-14)&(seqflag'=-1)&(tankflagPer'=2);
    //[] seqflag=-1&tankflagPer=2&sink=0 -> 0.1:(wl2Per'=0)&(seqflag'=0)&(tankflagPer'=1) + 0.1:(wl2Per'=100)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-0)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-2)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-4)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-6)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-8)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-10)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-12)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-14)&(seqflag'=0)&(tankflagPer'=1);

    // 13 bins uniform, coin flip, taken from simulation data
    [] seqflag=-1&tankflagPer=1&sink=0 -> 0.143200000000000:(wl1Per'=0)&(seqflag'=-1)&(tankflagPer'=2) + 0.143600000000000:(wl1Per'=100)&(seqflag'=-1)&(tankflagPer'=2) + 0.020500000000000: (wl1Per'=wl1-6)&(seqflag'=-1)&(tankflagPer'=2) + 0.024900000000000: (wl1Per'=wl1-5)&(seqflag'=-1)&(tankflagPer'=2) + 0.036800000000000: (wl1Per'=wl1-4)&(seqflag'=-1)&(tankflagPer'=2) + 0.053500000000000: (wl1Per'=wl1-3)&(seqflag'=-1)&(tankflagPer'=2) + 0.076400000000000: (wl1Per'=wl1-2)&(seqflag'=-1)&(tankflagPer'=2) + 0.095200000000000: (wl1Per'=wl1-1)&(seqflag'=-1)&(tankflagPer'=2) + 0.102800000000000: (wl1Per'=wl1+0)&(seqflag'=-1)&(tankflagPer'=2) + 0.093200000000000: (wl1Per'=wl1+1)&(seqflag'=-1)&(tankflagPer'=2) + 0.073300000000000: (wl1Per'=wl1+2)&(seqflag'=-1)&(tankflagPer'=2) + 0.052700000000000: (wl1Per'=wl1+3)&(seqflag'=-1)&(tankflagPer'=2) + 0.040700000000000: (wl1Per'=wl1+4)&(seqflag'=-1)&(tankflagPer'=2) + 0.023000000000000: (wl1Per'=wl1+5)&(seqflag'=-1)&(tankflagPer'=2) + 0.020200000000000: (wl1Per'=wl1+6)&(seqflag'=-1)&(tankflagPer'=2);
    [] seqflag=-1&tankflagPer=2&sink=0 -> 0.143200000000000:(wl2Per'=0)&(seqflag'=0)&(tankflagPer'=1) + 0.143600000000000:(wl2Per'=100)&(seqflag'=0)&(tankflagPer'=1) + 0.020500000000000: (wl2Per'=wl2-6)&(seqflag'=0)&(tankflagPer'=1) + 0.024900000000000: (wl2Per'=wl2-5)&(seqflag'=0)&(tankflagPer'=1) + 0.036800000000000: (wl2Per'=wl2-4)&(seqflag'=0)&(tankflagPer'=1) + 0.053500000000000: (wl2Per'=wl2-3)&(seqflag'=0)&(tankflagPer'=1) + 0.076400000000000: (wl2Per'=wl2-2)&(seqflag'=0)&(tankflagPer'=1) + 0.095200000000000: (wl2Per'=wl2-1)&(seqflag'=0)&(tankflagPer'=1) + 0.102800000000000: (wl2Per'=wl2+0)&(seqflag'=0)&(tankflagPer'=1) + 0.093200000000000: (wl2Per'=wl2+1)&(seqflag'=0)&(tankflagPer'=1) + 0.073300000000000: (wl2Per'=wl2+2)&(seqflag'=0)&(tankflagPer'=1) + 0.052700000000000: (wl2Per'=wl2+3)&(seqflag'=0)&(tankflagPer'=1) + 0.040700000000000: (wl2Per'=wl2+4)&(seqflag'=0)&(tankflagPer'=1) + 0.023000000000000: (wl2Per'=wl2+5)&(seqflag'=0)&(tankflagPer'=1) + 0.020200000000000: (wl2Per'=wl2+6)&(seqflag'=0)&(tankflagPer'=1);



    // 8 bins weird, coin flip
    //[] seqflag=-1&tankflagPer=1&sink=0 -> 0.1:(wl1Per'=0)&(seqflag'=-1)&(tankflagPer'=2) + 0.1:(wl1Per'=100)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-0)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-2)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.0625: (wl1Per'=wl1+6-4)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.25: (wl1Per'=wl1+6-6)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.0625: (wl1Per'=wl1+6-8)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.0: (wl1Per'=wl1+6-10)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.25: (wl1Per'=wl1+6-12)&(seqflag'=-1)&(tankflagPer'=2) + 0.8*0.125: (wl1Per'=wl1+6-14)&(seqflag'=-1)&(tankflagPer'=2);
    //[] seqflag=-1&tankflagPer=2&sink=0 -> 0.1:(wl2Per'=0)&(seqflag'=0)&(tankflagPer'=1) + 0.1:(wl2Per'=100)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-0)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-2)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.0625: (wl2Per'=wl2+6-4)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.25: (wl2Per'=wl2+6-6)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.0625: (wl2Per'=wl2+6-8)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.0: (wl2Per'=wl2+6-10)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.25: (wl2Per'=wl2+6-12)&(seqflag'=0)&(tankflagPer'=1) + 0.8*0.125: (wl2Per'=wl2+6-14)&(seqflag'=0)&(tankflagPer'=1);


    //[] seqflag=-1&tankflagPer=1&sink=0 -> 0.125: (wl1Per'=wl1+3-0)&(seqflag'=-1)&(tankflagPer'=2) + 0.125: (wl1Per'=wl1+3-1)&(seqflag'=-1)&(tankflagPer'=2) + 0.125: (wl1Per'=wl1+3-2)&(seqflag'=-1)&(tankflagPer'=2) + 0.125: (wl1Per'=wl1+3-3)&(seqflag'=-1)&(tankflagPer'=2) + 0.125: (wl1Per'=wl1+3-4)&(seqflag'=-1)&(tankflagPer'=2) + 0.125: (wl1Per'=wl1+3-5)&(seqflag'=-1)&(tankflagPer'=2) + 0.125: (wl1Per'=wl1+3-6)&(seqflag'=-1)&(tankflagPer'=2) + 0.125: (wl1Per'=wl1+3-7)&(seqflag'=-1)&(tankflagPer'=2);
    //[] seqflag=-1&tankflagPer=2&sink=0 -> 0.125: (wl2Per'=wl2+3-0)&(seqflag'=0)&(tankflagPer'=1) + 0.125: (wl2Per'=wl2+3-1)&(seqflag'=0)&(tankflagPer'=1) + 0.125: (wl2Per'=wl2+3-2)&(seqflag'=0)&(tankflagPer'=1) + 0.125: (wl2Per'=wl2+3-3)&(seqflag'=0)&(tankflagPer'=1) + 0.125: (wl2Per'=wl2+3-4)&(seqflag'=0)&(tankflagPer'=1) + 0.125: (wl2Per'=wl2+3-5)&(seqflag'=0)&(tankflagPer'=1) + 0.125: (wl2Per'=wl2+3-6)&(seqflag'=0)&(tankflagPer'=1) + 0.125: (wl2Per'=wl2+3-7)&(seqflag'=0)&(tankflagPer'=1);

    //[] seqflag=-1&tankflagPer=1&sink=0 -> 0.25:(wl1Per'=wl1-15)&(seqflag'=-1)&(tankflagPer'=2) + 0.5:(wl1Per'=wl1)&(seqflag'=-1)&(tankflagPer'=2) + 0.25:(wl1Per'=wl1+15)&(seqflag'=-1)&(tankflagPer'=2);
    //[] seqflag=-1&tankflagPer=2&sink=0 -> 0.25:(wl2Per'=wl2-15)&(seqflag'=0)&(tankflagPer'=1) + 0.5:(wl2Per'=wl2)&(seqflag'=0)&(tankflagPer'=1) + 0.25:(wl2Per'=wl2+15)&(seqflag'=0)&(tankflagPer'=1);

    // Pick control contAction1
    [] seqflag=0&tankflagCont=1&contAction1=0&wl1Per<wlContLowThresh&sink=0 -> (seqflag'=0)&(tankflagCont'=2)&(contAction1'=constFillRate);
    [] seqflag=0&tankflagCont=1&contAction1!=0&wl1Per<wlContUpThresh&sink=0 -> (seqflag'=0)&(tankflagCont'=2)&(contAction1'=constFillRate);
    [] seqflag=0&tankflagCont=1&contAction1=0&wl1Per>=wlContLowThresh&sink=0 -> (seqflag'=0)&(tankflagCont'=2)&(contAction1'=0);
    [] seqflag=0&tankflagCont=1&wl1Per>=wlContUpThresh&sink=0 -> (seqflag'=0)&(tankflagCont'=2)&(contAction1'=0);

    // Pick control contAction2
    [] seqflag=0&tankflagCont=2&contAction2=0&wl2Per<wlContLowThresh&sink=0 -> (seqflag'=0)&(tankflagCont'=3)&(contAction2'=constFillRate);
    [] seqflag=0&tankflagCont=2&contAction2!=0&wl2Per<wlContUpThresh&sink=0 -> (seqflag'=0)&(tankflagCont'=3)&(contAction2'=constFillRate);
    [] seqflag=0&tankflagCont=2&contAction2=0&wl2Per>=wlContLowThresh&sink=0 -> (seqflag'=0)&(tankflagCont'=3)&(contAction2'=0);
    [] seqflag=0&tankflagCont=2&wl2Per>=wlContUpThresh&sink=0 -> (seqflag'=0)&(tankflagCont'=3)&(contAction2'=0);


    // ADD CONTROL LOGIC TO PICK WHICH CONTROL ACTION TO USE!!!!!!!!!!!!!!!!!!!!!!
    // If both should fill, fill the one with less water
    [] seqflag=0&tankflagCont=3&contAction1=0&contAction2=0&sink=0 -> (seqflag'=3)&(tankflagCont'=1)&(inflow1'=contAction1)&(inflow2'=contAction2);
    [] seqflag=0&tankflagCont=3&contAction1=constFillRate&contAction2=0&sink=0 -> (seqflag'=3)&(tankflagCont'=1)&(inflow1'=contAction1)&(inflow2'=contAction2);
    [] seqflag=0&tankflagCont=3&contAction1=0&contAction2=constFillRate&sink=0 -> (seqflag'=3)&(tankflagCont'=1)&(inflow1'=contAction1)&(inflow2'=contAction2);
    
    // If both should fill, fill tank 1
    //[] seqflag=0&tankflagCont=3&contAction1=constFillRate&contAction2=constFillRate&sink=0 -> (seqflag'=3)&(tankflagCont'=1)&(inflow1'=contAction1)&(inflow2'=0);
    // If both should fill, fill the one with less water
    [] seqflag=0&tankflagCont=3&contAction1=constFillRate&contAction2=constFillRate&wl1Per<=wl2Per&sink=0 -> (seqflag'=3)&(tankflagCont'=1)&(inflow1'=contAction1)&(inflow2'=0);
    [] seqflag=0&tankflagCont=3&contAction1=constFillRate&contAction2=constFillRate&wl1Per>wl2Per&sink=0 -> (seqflag'=3)&(tankflagCont'=1)&(inflow1'=0)&(inflow2'=contAction2);

    // update water level
    [] seqflag=3&wl1>0&wl1<100&wl2>0&wl2<100&sink=0&(timesteps<maxTime) -> (seqflag'=-1)&(wl1'=wl1-outflow1+inflow1)&(wl2'=wl2-outflow2+inflow2)&(timesteps'=timesteps+1);
    [] seqflag=3&wl1<=0&sink=0 -> (sink'=1);
    [] seqflag=3&wl2<=0&sink=0 -> (sink'=1);
    [] seqflag=3&wl1>=100&sink=0 -> (sink'=1);
    [] seqflag=3&wl2>=100&sink=0 -> (sink'=1);





endmodule